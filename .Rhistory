data <- readRDS('~/bsu_scratch/LDL_Project_Data_Aug2019/Random_Forest/rs12916_rs17238484_rs5909_rs2303152_rs10066707_rs2006760_LDLdirect/data_p_9e-06_maf_5e-2.rds')
testingSet <- readRDS('~/bsu_scratch/LDL_Project_Data_Aug2019/Genotype_Data/test_set.rds')
colnames(data$dosageMatrix)
interationData <- data.table::fread('~/bsu_scratch/LDL_Project_Data_Aug2019/Interaction_Data/HMGCR_LDL_known.txt')
interactionData = interactionData
source('~/MRC_BSU_Internship_LDL/Recursive_Partitioning/CheckInteraction.R')
trainingSet <- readRDS('~/bsu_scratch/LDL_Project_Data_Aug2019/Genotype_Data/training_set.rds')
#Training set interaction effect
summary(lm(formula = 'LDL ~ HMGCR*topSNP + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(HMGCR = data$dosageTarget[trainingSet],topSNP = data$dosageMatrix[trainingSet,topSNP]),data$covariates[trainingSet,])))
#Training set interaction effect
summary(lm(formula = 'LDL ~ HMGCR*topSNP + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = data$phenotypes[trainingSet],HMGCR = data$dosageTarget[trainingSet],topSNP = data$dosageMatrix[trainingSet,topSNP]),data$covariates[trainingSet,])))
#Testing set interactions effect
summary(lm(formula = 'LDL ~ HMGCR*topSNP + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = data$phenotypes[testingSet],HMGCR = data$dosageTarget[testingSet],topSNP = data$dosageMatrix[testingSet,topSNP]),data$covariates[testingSet,])))
source('~/MRC_BSU_Internship_LDL/Recursive_Partitioning/ExtractSubsample.R')
#Segregate samples based on alelles
trainingSetData <- ExtractSubSample(data,trainingSet,testingSet)$outofbag
trainingSetData
homoRef <- which(trainingSetData$dosageMatrix[,topSNP]==0)
homoRef
homoRef <- trainingSetData$dosageMatrix[,topSNP]==0
homoRef
homoRef <- trainingSetData$dosageMatrix[,topSNP]==0
summary(lm(formula = 'LDL ~ HMGCR*topSNP + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[homoRef],HMGCR = trainingSetData$dosageTarget[homoRef],topSNP = trainingSetData$dosageMatrix[homoRef,topSNP]),trainingSetData$covariates[homoRef,])))
summary(lm(formula = 'LDL ~ HMGCR*topSNP + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!homoRef],HMGCR = trainingSetData$dosageTarget[!homoRef],topSNP = trainingSetData$dosageMatrix[!homoRef,topSNP]),trainingSetData$covariates[!homoRef,])))
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[homoRef],HMGCR = trainingSetData$dosageTarget[homoRef]),trainingSetData$covariates[homoRef,])))
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!homoRef],HMGCR = trainingSetData$dosageTarget[!homoRef]),trainingSetData$covariates[!homoRef,])))
#Segregate Sample Randomly
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[randSeg],HMGCR = trainingSetData$dosageTarget[randSeg]),trainingSetData$covariates[randSeg,])))
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!randSeg],HMGCR = trainingSetData$dosageTarget[!randSeg]),trainingSetData$covariates[!randSeg,])))
#Segregate Sample Randomly
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[randSeg],HMGCR = trainingSetData$dosageTarget[randSeg]),trainingSetData$covariates[randSeg,])))
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!randSeg],HMGCR = trainingSetData$dosageTarget[!randSeg]),trainingSetData$covariates[!randSeg,])))
#Segregate Sample Randomly
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[randSeg],HMGCR = trainingSetData$dosageTarget[randSeg]),trainingSetData$covariates[randSeg,])))
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!randSeg],HMGCR = trainingSetData$dosageTarget[!randSeg]),trainingSetData$covariates[!randSeg,])))
#Segregate Sample Randomly
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[randSeg],HMGCR = trainingSetData$dosageTarget[randSeg]),trainingSetData$covariates[randSeg,])))
summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!randSeg],HMGCR = trainingSetData$dosageTarget[!randSeg]),trainingSetData$covariates[!randSeg,])))
homoRefFit <- summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[homoRef],HMGCR = trainingSetData$dosageTarget[homoRef]),trainingSetData$covariates[homoRef,])))
nonHomoRefFit <- summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!homoRef],HMGCR = trainingSetData$dosageTarget[!homoRef]),trainingSetData$covariates[!homoRef,])))
homoRef
homoRefFit
nonHomoRefFit
homoRefFit$coefficients
homoRefFit$coefficients['HMGCR','Estimate']
sd(homoRefFit$coefficients['HMGCR','Estimate'],nonHomoRefFit$coefficients['HMGCR','Estimate'])
shomoRefFit$coefficients['HMGCR','Estimate'] - nonHomoRefFit$coefficients['HMGCR','Estimate'])
#Segregate Sample Randomly
nPerm <-
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
trueFiff <- shomoRefFit$coefficients['HMGCR','Estimate'] - nonHomoRefFit$coefficients['HMGCR','Estimate']
trueFiff <- homoRefFit$coefficients['HMGCR','Estimate'] - nonHomoRefFit$coefficients['HMGCR','Estimate']
trueDiff <- homoRefFit$coefficients['HMGCR','Estimate'] - nonHomoRefFit$coefficients['HMGCR','Estimate']
trueDiff
trueDiff
trueDiff
#Segregate Sample Randomly
nPerm <- 100
diff <- rep(NaN,nPerm)
for(i in 1:nPerm){
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
permFit1 <- summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[randSeg],HMGCR = trainingSetData$dosageTarget[randSeg]),trainingSetData$covariates[randSeg,])))
permFit2 <- summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!randSeg],HMGCR = trainingSetData$dosageTarget[!randSeg]),trainingSetData$covariates[!randSeg,])))
diff[i] <- abs(permFit1$coefficients['HMGCR','Estimate'] - permFit2$coefficients['HMGCR','Estimate'])
}
hist(diff)
trueDiff
max(diff)
sum(trueDiff > diff)
sum(trueDiff > diff)
#Segregate Sample Randomly
nPerm <- 1000
diff <- rep(NaN,nPerm)
for(i in 1:nPerm){
print(i)
randSeg <- sample(homoRef,size = length(homoRef),replace = F)
permFit1 <- summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[randSeg],HMGCR = trainingSetData$dosageTarget[randSeg]),trainingSetData$covariates[randSeg,])))
permFit2 <- summary(lm(formula = 'LDL ~ HMGCR + sex + ages + bmi + PC1 + PC2 +PC3 + PC4 + PC5',data = cbind(data.frame(LDL = trainingSetData$phenotypes[!randSeg],HMGCR = trainingSetData$dosageTarget[!randSeg]),trainingSetData$covariates[!randSeg,])))
diff[i] <- abs(permFit1$coefficients['HMGCR','Estimate'] - permFit2$coefficients['HMGCR','Estimate'])
}
sum(trueDiff > diff)
50 / 1000
100 - 947
1000 - 947
53 / 1000
hist(diff)
source('~/MRC_BSU_Internship_LDL/Recursive_Partitioning/CheckInteraction.R')
