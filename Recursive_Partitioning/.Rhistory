source('~/MRC_BSU_Internship/Recursive_Partitioning/ValidateTree.R', echo=TRUE)
source('~/MRC_BSU_Internship/Recursive_Partitioning/ValidateTree.R', echo=TRUE)
args <- list(1000,'5e-5')
debugSource('~/MRC_BSU_Internship/Recursive_Partitioning/GeneratePermutatedGenoMatrix.R', echo=TRUE)
args <- list(1000,'4e-5')
debugSource('~/MRC_BSU_Internship/Recursive_Partitioning/GeneratePermutatedGenoMatrix.R', echo=TRUE)
object.size(args)
?object.size
object.size(args,units = 'GB')
object.size(x=args,units = 'GB')
object.size(x=args,units = 'MB')
print(args,units = 'GB')
print(args,units = 'GB')[[2]]
print(args,units = 'GB')[2]
print(args,units = 'GB')[2]
format(args,units = 'GB')[2]
?mclapply
library(parallel)
?mclapply
?gc()
?pbmclapply
?pbmclapply
tree_chunks <- 1:500
length(tree_chunks) %*% 50
length(tree_chunks) %% 50
length(tree_chunks) / 50
quantile(tree_chunks)
round(quantile(tree_chunks))
round(quantile(tree_chunks),100)
round(quantile(tree_chunks))
floor(quantile(tree_chunks))
tree_chunks <- 501:1000
quantiles <- floor(quantile(tree_chunks))
for(i in 1:(length(quantiles) - 1)){
currentTreeChunk <- tree_chunks[tree_chunks < quantiles[i+1] & tree_chunks >= quantiles[i]]
if(i == (length(quantiles) - 1)){
currentTreeChunk <- c(currentTreeChunk,tree_chunks[length(tree_chunks)])
}
print(currentTreeChunk)
}
for(i in 1:(length(quantiles) - 1)){
currentTreeChunk <- tree_chunks[tree_chunks < quantiles[i+1] & tree_chunks >= quantiles[i]]
if(i == (length(quantiles) - 1)){
currentTreeChunk <- c(currentTreeChunk,tree_chunks[length(tree_chunks)])
}
print(range(currentTreeChunk))
}
